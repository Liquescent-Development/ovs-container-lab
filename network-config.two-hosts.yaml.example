# OVS Container Lab Network Configuration
# Multi-Host Cloud Network Topology with OVN Clustering
# This file defines the network topology across multiple hosts with HA

# Global settings
global:
  encapsulation: geneve  # Tunnel type for inter-host communication
  mtu: 1400  # Account for tunnel overhead
  enable_ssl: false  # Set to true for production with SSL certs
  log_level: info  # debug, info, warn, error

# Host definitions - Physical or VM hosts running OVS
hosts:
  host-1:
    chassis_name: chassis-host-1
    management_ip: 192.168.100.10  # Management network IP
    tunnel_ip: 192.168.100.10      # GENEVE tunnel endpoint
    location: datacenter-1
    zone: us-west-1a
    type: lima-vm  # Can be physical, vm, lima-vm, docker-host
    roles:
      - ovn-central  # This host participates in OVN cluster
      - ovn-controller
      - gateway  # Can provide external connectivity

  host-2:
    chassis_name: chassis-host-2
    management_ip: 192.168.100.11
    tunnel_ip: 192.168.100.11
    location: datacenter-1
    zone: us-west-1b
    type: lima-vm
    roles:
      - ovn-central
      - ovn-controller
      - gateway

  host-3:
    chassis_name: chassis-host-3
    management_ip: 192.168.100.12
    tunnel_ip: 192.168.100.12
    location: datacenter-2
    zone: us-east-1a
    type: physical
    roles:
      - ovn-central
      - ovn-controller
      - gateway

  host-4:
    chassis_name: chassis-host-4
    management_ip: 192.168.100.13
    tunnel_ip: 192.168.100.13
    location: datacenter-2
    zone: us-east-1b
    type: physical
    roles:
      - ovn-controller  # Compute-only node

  host-5:
    chassis_name: chassis-host-5
    management_ip: 192.168.100.14
    tunnel_ip: 192.168.100.14
    location: datacenter-2
    zone: us-east-1c
    type: physical
    roles:
      - ovn-controller  # Compute-only node

# OVN Clustering Configuration
ovn_cluster:
  # Clustered Northbound Database (RAFT)
  northbound:
    cluster_name: OVN_Northbound
    port: 6641
    raft_port: 6643  # RAFT clustering port
    nodes:
      - host: host-1
        priority: 100  # Leader election priority
        address: 192.168.100.10
      - host: host-2
        priority: 90
        address: 192.168.100.11
      - host: host-3
        priority: 80
        address: 192.168.100.12
    election_timeout: 1000  # milliseconds
    snapshot_interval: 1000  # log entries

  # Clustered Southbound Database (RAFT)
  southbound:
    cluster_name: OVN_Southbound
    port: 6642
    raft_port: 6644
    nodes:
      - host: host-1
        priority: 100
        address: 192.168.100.10
      - host: host-2
        priority: 90
        address: 192.168.100.11
      - host: host-3
        priority: 80
        address: 192.168.100.12
    election_timeout: 1000
    snapshot_interval: 1000

  # Connection strings for clients (ovn-controller)
  # These will automatically use all cluster members
  nb_connection: "tcp:192.168.100.10:6641,tcp:192.168.100.11:6641,tcp:192.168.100.12:6641"
  sb_connection: "tcp:192.168.100.10:6642,tcp:192.168.100.11:6642,tcp:192.168.100.12:6642"

  # Backup and maintenance settings
  backup:
    enabled: true
    interval: 6h
    retention: 7d
    location: /var/lib/ovn/backups

# VPC definitions
vpcs:
  vpc-a:
    tenant: tenant-1
    cidr: 10.0.0.0/16
    spanning_hosts: all  # Can use 'all' or specific host list
    router:
      name: lr-vpc-a
      mac: "00:00:00:01:00:00"
      ha_chassis_group:  # Distributed router with HA
        name: ha-group-vpc-a
        members:
          - chassis: chassis-host-1
            priority: 100
          - chassis: chassis-host-2
            priority: 90
          - chassis: chassis-host-3
            priority: 80
    switches:
      - name: ls-vpc-a-web
        cidr: 10.0.1.0/24
        tier: web
        type: distributed  # Distributed across all hosts
        load_balancer_enabled: true
      - name: ls-vpc-a-app
        cidr: 10.0.2.0/24
        tier: app
        type: distributed
      - name: ls-vpc-a-db
        cidr: 10.0.3.0/24
        tier: db
        type: localized  # Localized to specific hosts for performance
        preferred_hosts:
          - host-1
          - host-2
      - name: ls-vpc-a-test
        cidr: 10.0.4.0/24
        tier: test
        type: distributed

  vpc-b:
    tenant: tenant-2
    cidr: 10.1.0.0/16
    spanning_hosts: all
    router:
      name: lr-vpc-b
      mac: "00:00:00:02:00:00"
      ha_chassis_group:
        name: ha-group-vpc-b
        members:
          - chassis: chassis-host-2
            priority: 100
          - chassis: chassis-host-3
            priority: 90
          - chassis: chassis-host-1
            priority: 80
    switches:
      - name: ls-vpc-b-web
        cidr: 10.1.1.0/24
        tier: web
        type: distributed
        load_balancer_enabled: true
      - name: ls-vpc-b-app
        cidr: 10.1.2.0/24
        tier: app
        type: distributed
      - name: ls-vpc-b-db
        cidr: 10.1.3.0/24
        tier: db
        type: distributed
      - name: ls-vpc-b-test
        cidr: 10.1.4.0/24
        tier: test
        type: distributed

# Transit network for inter-VPC and external connectivity
transit:
  cidr: 192.168.100.0/24
  gateway_router:
    name: lr-gateway
    mac: "00:00:00:00:00:01"
    ha_chassis_group:
      name: ha-group-gateway
      members:
        - chassis: chassis-host-1
          priority: 100
        - chassis: chassis-host-2
          priority: 90
        - chassis: chassis-host-3
          priority: 80
  # External network for SNAT/DNAT
  external_network:
    name: external
    cidr: 172.16.0.0/24
    gateway: 172.16.0.1

# Container/VM definitions with host placement
containers:
  # VPC-A containers distributed across hosts
  vpc-a-web-1:
    host: host-1
    vpc: vpc-a
    switch: ls-vpc-a-web
    ip: 10.0.1.10
    mac: "02:00:00:01:01:10"
    tier: web
    scheduling:
      anti_affinity:
        - vpc-a-web-2  # Spread for HA
      resource_requirements:
        cpu: 2
        memory: 4G

  vpc-a-web-2:
    host: host-2
    vpc: vpc-a
    switch: ls-vpc-a-web
    ip: 10.0.1.11
    mac: "02:00:00:01:01:11"
    tier: web

  vpc-a-web-3:
    host: host-4  # On compute-only node
    vpc: vpc-a
    switch: ls-vpc-a-web
    ip: 10.0.1.12
    mac: "02:00:00:01:01:12"
    tier: web

  vpc-a-app-1:
    host: host-1
    vpc: vpc-a
    switch: ls-vpc-a-app
    ip: 10.0.2.10
    mac: "02:00:00:01:02:10"
    tier: app

  vpc-a-app-2:
    host: host-2
    vpc: vpc-a
    switch: ls-vpc-a-app
    ip: 10.0.2.11
    mac: "02:00:00:01:02:11"
    tier: app

  vpc-a-app-3:
    host: host-5  # On compute-only node
    vpc: vpc-a
    switch: ls-vpc-a-app
    ip: 10.0.2.12
    mac: "02:00:00:01:02:12"
    tier: app

  vpc-a-db-1:
    host: host-1  # Localized placement
    vpc: vpc-a
    switch: ls-vpc-a-db
    ip: 10.0.3.10
    mac: "02:00:00:01:03:10"
    tier: db
    scheduling:
      affinity:
        - vpc-a-db-2  # Keep DB cluster together

  vpc-a-db-2:
    host: host-1
    vpc: vpc-a
    switch: ls-vpc-a-db
    ip: 10.0.3.11
    mac: "02:00:00:01:03:11"
    tier: db

  traffic-gen-a:
    host: host-4
    vpc: vpc-a
    switch: ls-vpc-a-test
    ip: 10.0.4.10
    mac: "02:00:00:01:04:10"
    tier: test
    type: traffic-generator

  # VPC-B containers
  vpc-b-web-1:
    host: host-2
    vpc: vpc-b
    switch: ls-vpc-b-web
    ip: 10.1.1.10
    mac: "02:00:00:02:01:10"
    tier: web

  vpc-b-web-2:
    host: host-3
    vpc: vpc-b
    switch: ls-vpc-b-web
    ip: 10.1.1.11
    mac: "02:00:00:02:01:11"
    tier: web

  vpc-b-web-3:
    host: host-5
    vpc: vpc-b
    switch: ls-vpc-b-web
    ip: 10.1.1.12
    mac: "02:00:00:02:01:12"
    tier: web

  vpc-b-app-1:
    host: host-2
    vpc: vpc-b
    switch: ls-vpc-b-app
    ip: 10.1.2.10
    mac: "02:00:00:02:02:10"
    tier: app

  vpc-b-app-2:
    host: host-3
    vpc: vpc-b
    switch: ls-vpc-b-app
    ip: 10.1.2.11
    mac: "02:00:00:02:02:11"
    tier: app

  vpc-b-db-1:
    host: host-3
    vpc: vpc-b
    switch: ls-vpc-b-db
    ip: 10.1.3.10
    mac: "02:00:00:02:03:10"
    tier: db

  vpc-b-db-2:
    host: host-3
    vpc: vpc-b
    switch: ls-vpc-b-db
    ip: 10.1.3.11
    mac: "02:00:00:02:03:11"
    tier: db

  traffic-gen-b:
    host: host-5
    vpc: vpc-b
    switch: ls-vpc-b-test
    ip: 10.1.4.10
    mac: "02:00:00:02:04:10"
    tier: test
    type: traffic-generator

  # Special containers with HA
  nat-gateway-1:
    host: host-1
    vpc: transit
    switch: ls-transit
    ip: 192.168.100.254
    mac: "02:00:00:00:00:fe"
    type: nat-gateway
    ha_state: active

  nat-gateway-2:
    host: host-2
    vpc: transit
    switch: ls-transit
    ip: 192.168.100.253
    mac: "02:00:00:00:00:fd"
    type: nat-gateway
    ha_state: backup

  nat-gateway-3:
    host: host-3
    vpc: transit
    switch: ls-transit
    ip: 192.168.100.252
    mac: "02:00:00:00:00:fc"
    type: nat-gateway
    ha_state: backup

# Load balancer configuration
load_balancers:
  vpc-a-web-lb:
    vpc: vpc-a
    switch: ls-vpc-a-web
    vip: 10.0.1.100
    protocol: tcp
    port: 80
    backends:
      - vpc-a-web-1:80
      - vpc-a-web-2:80
      - vpc-a-web-3:80
    algorithm: round_robin
    health_check:
      protocol: http
      path: /health
      interval: 10
      timeout: 5
      retries: 3

  vpc-b-web-lb:
    vpc: vpc-b
    switch: ls-vpc-b-web
    vip: 10.1.1.100
    protocol: tcp
    port: 443
    backends:
      - vpc-b-web-1:443
      - vpc-b-web-2:443
      - vpc-b-web-3:443
    algorithm: least_connections
    session_persistence:
      type: source_ip
      timeout: 300

# ACLs and Security Groups
security:
  acls:
    - name: allow-web-traffic
      priority: 1000
      direction: from-lport
      match: "inport == @web-ports && ip4.dst == 10.0.1.0/24 && tcp.dst == 80"
      action: allow

    - name: allow-ssh-management
      priority: 900
      direction: from-lport
      match: "ip4.src == 192.168.100.0/24 && tcp.dst == 22"
      action: allow

    - name: deny-db-from-web
      priority: 800
      direction: from-lport
      match: "inport == @web-ports && ip4.dst == 10.0.3.0/24"
      action: drop

  port_groups:
    web-ports:
      - vpc-a-web-1
      - vpc-a-web-2
      - vpc-a-web-3
      - vpc-b-web-1
      - vpc-b-web-2
      - vpc-b-web-3

    db-ports:
      - vpc-a-db-1
      - vpc-a-db-2
      - vpc-b-db-1
      - vpc-b-db-2

# Veth naming configuration
veth_naming:
  strategy: host_container  # Include both host and container info
  format: "v-{host_id}-{container_short}"  # e.g., v-h1-web1
  max_length: 15  # Linux interface name limit
  special_cases:
    traffic-gen-a: veth-tg-a
    traffic-gen-b: veth-tg-b

# Monitoring and observability
monitoring:
  prometheus:
    scrape_interval: 15s
    retention: 30d
    targets:
      - job: ovs
        hosts:
          - host-1:9475
          - host-2:9475
          - host-3:9475
          - host-4:9475
          - host-5:9475
      - job: ovn
        hosts:
          - host-1:9476
          - host-2:9476
          - host-3:9476
      - job: node
        hosts:
          - host-1:9100
          - host-2:9100
          - host-3:9100
          - host-4:9100
          - host-5:9100

  grafana:
    dashboards:
      - ovs-cluster-overview
      - ovn-cluster-health
      - vpc-traffic-flow
      - cross-host-latency

  alerts:
    - name: ovn-cluster-degraded
      condition: ovn_cluster_healthy == 0
      severity: critical
    - name: chassis-disconnected
      condition: ovn_chassis_up == 0
      severity: warning
    - name: high-tunnel-latency
      condition: geneve_rtt_ms > 50
      severity: warning

# Chaos testing scenarios
chaos_scenarios:
  ovn_leader_failure:
    description: "Kill OVN cluster leader"
    actions:
      - kill_process:
          host: detect_leader
          process: ovsdb-server
          database: OVN_Northbound
          duration: 30s

  cluster_partition:
    description: "Partition OVN cluster"
    actions:
      - block_traffic:
          from_hosts: [host-1]
          to_hosts: [host-2, host-3]
          ports: [6641, 6642, 6643, 6644]
          duration: 60s

  cascade_host_failure:
    description: "Cascading host failures"
    actions:
      - disable_host:
          host: host-1
          duration: 30s
      - wait: 10s
      - disable_host:
          host: host-2
          duration: 30s

  cross_datacenter_latency:
    description: "Simulate cross-DC latency"
    actions:
      - add_latency:
          from_location: datacenter-1
          to_location: datacenter-2
          latency: 100ms
          jitter: 20ms
          duration: 120s

# Deployment automation
deployment:
  ansible_playbook: deploy-ovn-cluster.yml
  terraform_module: ovn-multihost-cluster
  stages:
    - name: prepare-hosts
      tasks:
        - install-ovs
        - install-ovn
        - configure-networking
    - name: init-cluster
      tasks:
        - init-ovn-nb-cluster
        - init-ovn-sb-cluster
        - verify-cluster-health
    - name: configure-topology
      tasks:
        - create-logical-routers
        - create-logical-switches
        - configure-ha-groups
    - name: deploy-workloads
      tasks:
        - create-containers
        - bind-containers
        - verify-connectivity