# Simplified docker-compose using OVS plugin directly
# No network-config.yaml needed!

services:
  # OVN Control Plane
  ovn-central:
    build: ./ovn-container
    container_name: ovn-central
    hostname: ovn-central
    restart: unless-stopped
    privileged: true
    networks:
      transit-overlay:
        ipv4_address: 192.168.100.5
    ports:
      - "6641:6641"  # OVN Northbound DB
      - "6642:6642"  # OVN Southbound DB
      - "9476:9476"  # OVN Exporter metrics
    volumes:
      - ovn-nb-db:/var/lib/ovn
      - ovn-logs:/var/log/ovn
    cap_add:
      - NET_ADMIN
      - SYS_MODULE

  # NAT Gateway
  nat-gateway:
    build: ./nat-gateway
    container_name: nat-gateway
    hostname: nat-gateway
    restart: unless-stopped
    privileged: true
    networks:
      - default  # Bridge network for internet
      - transit-overlay
    cap_add:
      - NET_ADMIN
      - NET_RAW
    sysctls:
      - net.ipv4.ip_forward=1

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards

  # InfluxDB v1.11 Time Series Database
  influxdb:
    image: influxdb:1.11-alpine
    container_name: influxdb
    restart: unless-stopped
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=ovs_metrics
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
      - INFLUXDB_HTTP_AUTH_ENABLED=false
    volumes:
      - influxdb-data:/var/lib/influxdb

  # Telegraf v1.34 Metrics Collector
  telegraf:
    image: telegraf:1.34-alpine
    container_name: telegraf
    restart: unless-stopped
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - influxdb

  # VPC-A Containers
  vpc-a-web:
    build: ./vpc-container
    container_name: vpc-a-web
    hostname: vpc-a-web
    networks:
      vpc-a-web:
        ipv4_address: 10.0.1.10
    environment:
      - TIER=web

  vpc-a-app:
    build: ./vpc-container
    container_name: vpc-a-app
    hostname: vpc-a-app
    networks:
      vpc-a-app:
        ipv4_address: 10.0.2.10
    environment:
      - TIER=app

  vpc-a-db:
    build: ./vpc-container
    container_name: vpc-a-db
    hostname: vpc-a-db
    networks:
      vpc-a-db:
        ipv4_address: 10.0.3.10
    environment:
      - TIER=db

  # VPC-B Containers
  vpc-b-web:
    build: ./vpc-container
    container_name: vpc-b-web
    hostname: vpc-b-web
    networks:
      vpc-b-web:
        ipv4_address: 10.1.1.10
    environment:
      - TIER=web

  vpc-b-app:
    build: ./vpc-container
    container_name: vpc-b-app
    hostname: vpc-b-app
    networks:
      vpc-b-app:
        ipv4_address: 10.1.2.10
    environment:
      - TIER=app

  vpc-b-db:
    build: ./vpc-container
    container_name: vpc-b-db
    hostname: vpc-b-db
    networks:
      vpc-b-db:
        ipv4_address: 10.1.3.10
    environment:
      - TIER=db

networks:
  # Transit network for OVN components (regular bridge)
  transit-overlay:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.100.0/24

  # VPC-A Networks using OVS plugin
  vpc-a-web:
    driver: ovs-container-network:latest
    driver_opts:
      bridge: br-int
      tenant_id: tenant-1
      vlan: "101"
      ovn.switch: ls-vpc-a-web
      ovn.router: lr-vpc-a
      ovn.nb_connection: tcp:ovn-central:6641
      ovn.sb_connection: tcp:ovn-central:6642
    ipam:
      config:
        - subnet: 10.0.1.0/24
          gateway: 10.0.1.1

  vpc-a-app:
    driver: ovs-container-network:latest
    driver_opts:
      bridge: br-int
      tenant_id: tenant-1
      vlan: "102"
      ovn.switch: ls-vpc-a-app
      ovn.router: lr-vpc-a
      ovn.nb_connection: tcp:ovn-central:6641
      ovn.sb_connection: tcp:ovn-central:6642
    ipam:
      config:
        - subnet: 10.0.2.0/24
          gateway: 10.0.2.1

  vpc-a-db:
    driver: ovs-container-network:latest
    driver_opts:
      bridge: br-int
      tenant_id: tenant-1
      vlan: "103"
      ovn.switch: ls-vpc-a-db
      ovn.router: lr-vpc-a
      ovn.nb_connection: tcp:ovn-central:6641
      ovn.sb_connection: tcp:ovn-central:6642
    ipam:
      config:
        - subnet: 10.0.3.0/24
          gateway: 10.0.3.1

  # VPC-B Networks using OVS plugin
  vpc-b-web:
    driver: ovs-container-network:latest
    driver_opts:
      bridge: br-int
      tenant_id: tenant-2
      vlan: "201"
      ovn.switch: ls-vpc-b-web
      ovn.router: lr-vpc-b
      ovn.nb_connection: tcp:ovn-central:6641
      ovn.sb_connection: tcp:ovn-central:6642
    ipam:
      config:
        - subnet: 10.1.1.0/24
          gateway: 10.1.1.1

  vpc-b-app:
    driver: ovs-container-network:latest
    driver_opts:
      bridge: br-int
      tenant_id: tenant-2
      vlan: "202"
      ovn.switch: ls-vpc-b-app
      ovn.router: lr-vpc-b
      ovn.nb_connection: tcp:ovn-central:6641
      ovn.sb_connection: tcp:ovn-central:6642
    ipam:
      config:
        - subnet: 10.1.2.0/24
          gateway: 10.1.2.1

  vpc-b-db:
    driver: ovs-container-network:latest
    driver_opts:
      bridge: br-int
      tenant_id: tenant-2
      vlan: "203"
      ovn.switch: ls-vpc-b-db
      ovn.router: lr-vpc-b
      ovn.nb_connection: tcp:ovn-central:6641
      ovn.sb_connection: tcp:ovn-central:6642
    ipam:
      config:
        - subnet: 10.1.3.0/24
          gateway: 10.1.3.1

volumes:
  prometheus-data:
  grafana-data:
  influxdb-data:
  ovn-nb-db:
  ovn-logs: