version: '3.8'

services:
  # OVN SDN Controller (central control plane)
  ovn-central:
    build: ./ovn-container
    container_name: ovn-central
    hostname: ovn-central
    restart: unless-stopped
    privileged: true
    networks:
      transit-overlay:
        ipv4_address: 192.168.100.5
    volumes:
      - ovn-nb-db:/var/lib/ovn
      - ovn-logs:/var/log/ovn
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
      - SYS_NICE
    healthcheck:
      test: ["CMD", "/healthcheck.sh"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 60s
    labels:
      - "ovs-lab=true"
      - "component=control-plane"

  # VPC-A OVS Instance
  ovs-vpc-a:
    build: ./ovs-container
    container_name: ovs-vpc-a
    hostname: ovs-vpc-a
    restart: unless-stopped
    privileged: true
    ports:
      - "9475:9475"  # OVS exporter metrics
    networks:
      vpc-a-internal:
        ipv4_address: 192.168.10.2
      transit-overlay:
        ipv4_address: 192.168.100.10
    volumes:
      - ovs-vpc-a-run:/var/run/openvswitch
      - ovs-vpc-a-lib:/var/lib/openvswitch
      - ovs-vpc-a-logs:/var/log/openvswitch
      - ovs-vpc-a-etc:/etc/openvswitch
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
      - SYS_NICE
    environment:
      - OVS_BRIDGE_NAME=br-vpc-a
      - OVS_BRIDGE_IP=10.0.99.1/24
      - OVN_REMOTE=tcp:192.168.100.5:6642
      - OVN_ENCAP_IP=192.168.100.10
      - OVN_ENCAP_TYPE=geneve
    healthcheck:
      test: ["CMD", "/healthcheck.sh"]
      interval: 30s
      timeout: 5s
      retries: 3
    depends_on:
      ovn-central:
        condition: service_healthy
    labels:
      - "ovs-lab=true"
      - "component=data-plane"
      - "vpc=a"

  # VPC-B OVS Instance
  ovs-vpc-b:
    build: ./ovs-container
    container_name: ovs-vpc-b
    hostname: ovs-vpc-b
    restart: unless-stopped
    privileged: true
    ports:
      - "9477:9475"  # OVS exporter metrics
    networks:
      vpc-b-internal:
        ipv4_address: 192.168.20.2
      transit-overlay:
        ipv4_address: 192.168.100.20
    volumes:
      - ovs-vpc-b-run:/var/run/openvswitch
      - ovs-vpc-b-lib:/var/lib/openvswitch
      - ovs-vpc-b-logs:/var/log/openvswitch
      - ovs-vpc-b-etc:/etc/openvswitch
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
      - SYS_NICE
    environment:
      - OVS_BRIDGE_NAME=br-vpc-b
      - OVS_BRIDGE_IP=10.1.99.1/24
      - OVN_REMOTE=tcp:192.168.100.5:6642
      - OVN_ENCAP_IP=192.168.100.20
      - OVN_ENCAP_TYPE=geneve
    healthcheck:
      test: ["CMD", "/healthcheck.sh"]
      interval: 30s
      timeout: 5s
      retries: 3
    depends_on:
      ovn-central:
        condition: service_healthy
    labels:
      - "ovs-lab=true"
      - "component=data-plane"
      - "vpc=b"

  # VPC-A Router (FRR)
  vrouter-vpc-a:
    build: ./frr-router
    container_name: vrouter-vpc-a
    hostname: vrouter-vpc-a
    privileged: true
    networks:
      vpc-a-internal:
        ipv4_address: 192.168.10.250
      transit-overlay:
        ipv4_address: 192.168.100.101
    ports:
      - "9101:9100"  # Node exporter metrics
    environment:
      - ROUTER_ID=10.0.0.1
      - ROUTER_NAME=vrouter-vpc-a
      - INTERFACES=eth0 eth1
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.rp_filter=0
      - net.ipv4.conf.default.rp_filter=0
    labels:
      - "ovs-lab=true"
      - "component=routing"
      - "vpc=a"

  # VPC-B Router (FRR)
  vrouter-vpc-b:
    build: ./frr-router
    container_name: vrouter-vpc-b
    hostname: vrouter-vpc-b
    privileged: true
    networks:
      vpc-b-internal:
        ipv4_address: 192.168.20.250
      transit-overlay:
        ipv4_address: 192.168.100.102
    ports:
      - "9102:9100"  # Node exporter metrics
    environment:
      - ROUTER_ID=10.1.0.1
      - ROUTER_NAME=vrouter-vpc-b
      - INTERFACES=eth0 eth1
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.rp_filter=0
      - net.ipv4.conf.default.rp_filter=0
    labels:
      - "ovs-lab=true"
      - "component=routing"
      - "vpc=b"

  # Monitoring - Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    labels:
      - "ovs-lab=true"
      - "component=monitoring"

  # Monitoring - Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    labels:
      - "ovs-lab=true"
      - "component=monitoring"


  # Traffic Generator
  traffic-generator:
    build: ./traffic-generator
    container_name: traffic-generator
    restart: "no"
    networks:
      transit-overlay:
        ipv4_address: 192.168.100.200
    privileged: true
    volumes:
      - ./traffic-generator/vpc-traffic-gen.py:/vpc-traffic-gen.py
    command: sleep infinity
    labels:
      - "ovs-lab=true"
      - "component=testing"

networks:
  vpc-a-internal:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.10.0/24
          gateway: 192.168.10.1
  vpc-b-internal:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.20.0/24
          gateway: 192.168.20.1
  transit-overlay:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.100.0/24
          gateway: 192.168.100.1

volumes:
  prometheus-data:
  grafana-data:
  ovs-vpc-a-run:
  ovs-vpc-a-lib:
  ovs-vpc-a-logs:
  ovs-vpc-a-etc:
  ovs-vpc-b-run:
  ovs-vpc-b-lib:
  ovs-vpc-b-logs:
  ovs-vpc-b-etc:
  ovn-nb-db:
  ovn-logs: